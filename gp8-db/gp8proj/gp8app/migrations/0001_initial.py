# Generated by Django 5.0.2 on 2024-03-29 05:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.IntegerField(db_column='Admin_ID', primary_key=True, serialize=False)),
                ('ssn', models.CharField(db_column='SSN', max_length=11, unique=True)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('birthdate', models.DateField(db_column='Birthdate')),
            ],
            options={
                'db_table': 'Admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('auction_id', models.IntegerField(db_column='Auction_ID', primary_key=True, serialize=False)),
                ('auction_status', models.CharField(blank=True, db_column='Auction_Status', max_length=255, null=True)),
                ('start_time', models.DateTimeField(blank=True, db_column='Start_Time', null=True)),
                ('end_time', models.DateTimeField(blank=True, db_column='End_Time', null=True)),
                ('auction_period', models.IntegerField(blank=True, db_column='Auction_Period', null=True)),
            ],
            options={
                'db_table': 'Auction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Auctioncar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unsold', models.IntegerField(blank=True, db_column='Unsold', null=True)),
                ('reserve_price', models.DecimalField(blank=True, db_column='Reserve_Price', decimal_places=2, max_digits=10, null=True)),
                ('start_bid', models.DecimalField(blank=True, db_column='Start_Bid', decimal_places=2, max_digits=10, null=True)),
                ('soldprice', models.DecimalField(blank=True, db_column='SoldPrice', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'AuctionCar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('bid_id', models.IntegerField(db_column='Bid_ID', primary_key=True, serialize=False)),
                ('bid_amount', models.DecimalField(blank=True, db_column='Bid_Amount', decimal_places=2, max_digits=10, null=True)),
                ('bid_time', models.DateTimeField(blank=True, db_column='Bid_Time', null=True)),
                ('vin', models.CharField(blank=True, db_column='VIN', max_length=17, null=True)),
                ('bidwin', models.IntegerField(blank=True, db_column='BIDWIN', null=True)),
            ],
            options={
                'db_table': 'Bid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('vin', models.CharField(db_column='VIN', max_length=17, primary_key=True, serialize=False)),
                ('exterior_color', models.CharField(blank=True, db_column='Exterior_Color', max_length=255, null=True)),
                ('interior_color', models.CharField(blank=True, db_column='Interior_Color', max_length=255, null=True)),
                ('make', models.CharField(blank=True, db_column='Make', max_length=255, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=255, null=True)),
                ('fuel', models.CharField(blank=True, db_column='Fuel', max_length=255, null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('list_time', models.DateTimeField(blank=True, db_column='List_Time', null=True)),
                ('list_price', models.DecimalField(blank=True, db_column='List_Price', decimal_places=2, max_digits=10, null=True)),
                ('current_mileage', models.IntegerField(blank=True, db_column='Current_Mileage', null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='car_images/')),
            ],
            options={
                'db_table': 'Car',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Manage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(blank=True, db_column='Password', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Manage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.IntegerField(db_column='Order_ID', primary_key=True, serialize=False)),
                ('time', models.DateTimeField(blank=True, db_column='Time', null=True)),
                ('o_price', models.DecimalField(blank=True, db_column='O_Price', decimal_places=2, max_digits=10, null=True)),
                ('payment_method', models.CharField(blank=True, db_column='Payment_Method', max_length=255, null=True)),
                ('vin', models.CharField(blank=True, db_column='VIN', max_length=17, null=True)),
            ],
            options={
                'db_table': 'Orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.IntegerField(db_column='Payment_ID', primary_key=True, serialize=False)),
                ('payment_method', models.CharField(blank=True, db_column='Payment_Method', max_length=255, null=True)),
                ('payment_status', models.CharField(blank=True, db_column='Payment_Status', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.IntegerField(db_column='Report_ID', primary_key=True, serialize=False)),
                ('detail_history', models.TextField(blank=True, db_column='Detail_History', null=True)),
                ('owner_history', models.TextField(blank=True, db_column='Owner_History', null=True)),
                ('title_history', models.TextField(blank=True, db_column='Title_History', null=True)),
                ('additional_history', models.TextField(blank=True, db_column='Additional_History', null=True)),
                ('history_mileage', models.IntegerField(blank=True, db_column='History_Mileage', null=True)),
                ('owner_count', models.IntegerField(blank=True, db_column='Owner_Count', null=True)),
            ],
            options={
                'db_table': 'Report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('tracking_number', models.CharField(db_column='Tracking_Number', max_length=255, primary_key=True, serialize=False)),
                ('shipping_method', models.CharField(blank=True, db_column='Shipping_Method', max_length=255, null=True)),
                ('shipping_status', models.CharField(blank=True, db_column='Shipping_Status', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Shipping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.IntegerField(db_column='Transaction_ID', primary_key=True, serialize=False)),
                ('payment_method', models.CharField(blank=True, db_column='Payment_Method', max_length=255, null=True)),
                ('time', models.DateTimeField(blank=True, db_column='Time', null=True)),
                ('transaction_amount', models.DecimalField(blank=True, db_column='Transaction_Amount', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'Transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userfeedback',
            fields=[
                ('case_id', models.IntegerField(db_column='Case_ID', primary_key=True, serialize=False)),
                ('feedback', models.CharField(blank=True, db_column='Feedback', max_length=255, null=True)),
                ('category', models.CharField(blank=True, db_column='Category', max_length=255, null=True)),
            ],
            options={
                'db_table': 'UserFeedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userpreference',
            fields=[
                ('preferenceid', models.IntegerField(db_column='PreferenceID', primary_key=True, serialize=False)),
                ('allowed_sharing_info', models.IntegerField(blank=True, db_column='Allowed_Sharing_Info', null=True)),
                ('allowed_reciving_adv', models.IntegerField(blank=True, db_column='Allowed_Reciving_ADV', null=True)),
                ('allowed_sending_email', models.IntegerField(blank=True, db_column='Allowed_Sending_Email', null=True)),
                ('allowed_sending_text', models.IntegerField(blank=True, db_column='Allowed_Sending_text', null=True)),
            ],
            options={
                'db_table': 'UserPreference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.IntegerField(db_column='User_ID', primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, db_column='Phone_Number', max_length=20, null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=1, null=True)),
                ('age', models.IntegerField(blank=True, db_column='Age', null=True)),
                ('lastn', models.CharField(blank=True, db_column='LastN', max_length=255, null=True)),
                ('firstn', models.CharField(blank=True, db_column='FirstN', max_length=255, null=True)),
                ('seller', models.IntegerField(blank=True, db_column='Seller', null=True)),
                ('bidder', models.IntegerField(blank=True, db_column='Bidder', null=True)),
                ('active_date', models.DateField(blank=True, db_column='Active_Date', null=True)),
                ('street', models.CharField(blank=True, db_column='Street', max_length=255, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=255, null=True)),
                ('zip', models.CharField(blank=True, db_column='ZIP', max_length=20, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Convertible',
            fields=[
                ('vin', models.OneToOneField(db_column='VIN', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gp8app.car')),
                ('canopymaterial', models.CharField(blank=True, db_column='CanopyMaterial', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Convertible',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Electric',
            fields=[
                ('vin', models.OneToOneField(db_column='VIN', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gp8app.car')),
                ('electric_range', models.IntegerField(blank=True, db_column='Electric_Range', null=True)),
            ],
            options={
                'db_table': 'Electric',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hybrid',
            fields=[
                ('vin', models.OneToOneField(db_column='VIN', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gp8app.car')),
                ('fuel_range', models.IntegerField(blank=True, db_column='Fuel_Range', null=True)),
                ('electric_range', models.IntegerField(blank=True, db_column='Electric_Range', null=True)),
            ],
            options={
                'db_table': 'Hybrid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sedan',
            fields=[
                ('vin', models.OneToOneField(db_column='VIN', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gp8app.car')),
                ('seatnumber', models.IntegerField(blank=True, db_column='SeatNumber', null=True)),
            ],
            options={
                'db_table': 'Sedan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suv',
            fields=[
                ('vin', models.OneToOneField(db_column='VIN', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gp8app.car')),
                ('seatnumber', models.IntegerField(blank=True, db_column='SeatNumber', null=True)),
            ],
            options={
                'db_table': 'SUV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('vin', models.OneToOneField(db_column='VIN', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gp8app.car')),
                ('boatload', models.IntegerField(blank=True, db_column='BoatLoad', null=True)),
            ],
            options={
                'db_table': 'Truck',
                'managed': False,
            },
        ),
    ]
